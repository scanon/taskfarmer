#!/bin/sh

# Temporary directory for run info
#
export TF_DIR=$HOME/.task-farmer.$PBS_JOBID
export SOCKFILE=$TF_DIR/sockfile
export PIDFILE=$TF_DIR/tfserver.pid

BLAST=/project/projectdirs/genomes/apps/bin/blastall

cleanup () {
  if [ -e $PIDFILE ] ; then
    kill $(cat $PIDFILE) > /dev/null 2>&1
  fi
  rm $SOCKFILE $PIDFILE
  rmdir $TF_DIR
  exit 
}
trap cleanup 2 15

# Create the TF directory
#
if [ ! -e $TF_DIR ] ; then
  mkdir $TF_DIR
else
  rm $SOCKFILE $PIDFILE
fi

# Source the configuration file
TF_CONFDIR=$TF_HOME/share/taskfarmer
if [ -e $TF_CONFDIR/$NERSC_HOST.conf ] ; then
  . $TF_CONFDIR/$NERSC_HOST.conf
else
  echo "The Task Farmer is not currently supported on this system."
  exit
fi

# Get the address for the server
#
export TF_ADDR=$(/sbin/ifconfig $INT|grep 'inet addr'|awk -F: '{print $2}'|sed 's/ .*//')

# Start the server and record the PID
#
if [ $(basename $0) = "blasttf" ] ; then
  $TF_HOME/libexec/tf_server $BLAST "$@" &
else
  $TF_HOME/libexec/tf_server "$@" &
fi
echo $! > $PIDFILE
#
# Wait for the socket file to exist.
#
while [ ! -e $SOCKFILE ] ; do
  sleep 1
done

# Launch the clients
#
run_one
# Get exit status for aprun
#
STATUS=$?

# Kill the server (just in case)
kill $(cat $PIDFILE) > /dev/null 2>&1
exit $STATUS
