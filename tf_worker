#!/bin/sh
#
# This is the standard run script that is executed on the compute node.
# It fetches sequences from a server using netcat, runs some analysis, and pushes back results
#
#
SERVER=$1
PORT=$2
TMPDIR=/tmp/$USER

# Source any setup files that are needed for the system.
#
TF_CONFDIR=$TF_HOME/share/taskfarmer/
if [ -x $TF_CONFDIR/$NERSC_HOST.stage ] ; then
  . $TF_CONFDIR/$NERSC_HOST.stage
fi

mkdir -p $TMPDIR
cd $TMPDIR

# Source the staging file specified by the user if there is one.
#
if [ ! -z $STAGE ] && [ -x "$STAGE" ] ; then
  . $STAGE
fi

# Change back into the temp dir just in case the
# stager moved us around.
#
cd $TMPDIR

# This will be called if an interupt is received.
#
cleanup() {
#  echo "Called cleanup"
  for pid in $PIDS ; do
    if [ -d /proc/$pid ] ;then
      kill $pid
    fi
  done
  sleep 1
  cd /tmp
  rm -rf $TMPDIR
  CLEANUP=1
  if [ ! -z $STAGE_ONCE ] && [ -x "$STAGE_ONCE" ] ; then
  . $STAGE_ONCE
  fi
  exit
}
# Set the trap
trap cleanup 2 15

# Determine the number of threads
#
THREADS=$(grep -c processor /proc/cpuinfo)
#
# Run the IDCOMMAND
eval $IDCOMMAND
export BID=$ID
for THREAD in $(seq $THREADS) ; do
  export ID="$BID-$THREAD"
  perl $TF_HOME/libexec/tf_worker_thread $SERVER $PORT $THREAD &
  PIDS="$PIDS $!"
done

# Wait for all threads to exit before cleanup
wait

# Cleanup Cleanup everybody do their share
#
cleanup
