#!/bin/sh

# This is what starts things...
export NERSC_HOST=test

if [ $# -eq 0 ] ; then
  export TFILE=test.faa
  export SERVER_TIMEOUT=1
  export TIMEOUT_SOCKET=1

  export ARG_OUT=`pwd`/test.args

  rm *.$TFILE $ARG_OUT
  echo "Starting server.  This will get killed as part of test."
  $TF_HOME/bin/tfrun -i $TFILE `pwd`/$0 arg1 arg2 'a b' > test.out 2> test.err
  export RECOVERED=1
  echo "Restarting server"
  $TF_HOME/bin/tfrun -i $TFILE `pwd`/$0 arg1 arg2 'a b' >> test.out 2>> test.err

# Everything has ran.  Now let's see how it did
  echo "Checking Results"
  [ $(cat $ARG_OUT|wc -l) -eq 3 ] || echo "Error: incorrect number of args"
  [ $(grep -c 'a b' $ARG_OUT) -eq 1 ] || echo "Error: didn't read arg with space"
  [ $( cat progress.$TFILE |sed 's/,/\n/g'|wc -l) -eq $(grep -c '^>' $TFILE) ] || echo "Didn't process all lines"

# Cleanup
  rm progress.$TFILE error.$TFILE fastrecovery.$TFILE $ARG_OUT
else

  OUT=$(wc)

# Get ARGS
  if [ $STEP -eq 0 ] && [ -z $RECOVERED ] ; then
    for i in "$@" ; do
      echo $i  >> $ARG_OUT
    done
# Test timeout
  elif [ $STEP -eq 2 ] && [ -z $RECOVERED ] ; then
    sleep 3
# Test max retry
#
  elif [ $STEP -gt 4 ] && [ $STEP -lt 13 ] && [ -z $RECOVERED ] ; then
    exit 1;
# Test recovery
  elif [ $STEP -gt 15 ] && [ -z $RECOVERED ] ; then 
    kill $(cat $PIDFILE)
    exit 1;
  fi
  echo $OUT
  
fi
