#!/usr/bin/perl
$requests=$ARGV[0];

# Do a status dot every this many items
$dots=100000;
$|=1;

print stderr "Reading Progress file\n";
open(PROG,"progress");
while(<PROG>){
  ($seq,$host,$time,$$lines,$walltime)=split /:/; 
  $sum+=$time;
  $headers{$seq}=1;
  $ct++;
  print stderr "." if ($ct%$dots eq 0);
  print stderr "o" if ($ct%(10*$dots) eq 0);
}
close PROG;
printf stderr "\nAverage time: %d\n",$sum/$ct;

open(RERUN,"rerun.lst");
while(<RERUN>){
  chomp;
  delete $headers{$_};
  $ct--;
}
close RERUN;
$max=$ct;

#open(LIST,"list");
#while(<LIST>){
#  chomp;
#  $headers{$_}=1;
#  $ct++;
#}
#close LIST;
$max=scalar(keys %headers);

$item=-1;
while(<stdin>){
  if (/^>/){
    print stderr "d" if ($item%$dots eq 0);
    print stderr "D" if ($item%(10*$dots) eq 0);
    $item++;
    ($bl,$header,$rest)=split /[> ]/;
    last if ! defined $headers{$header};
  }
    
#  print "$item: $_";
}
$min=$item;
$min=$ARGV[1] if defined $ARGV[1];
$max=int($max*11/10);
print stderr "\nfirst gene: $header\n";
print stderr "Min: $min\n";
print stderr "Max: $max\n";

$new=0;
$print=1;
while($new<$requests){
    ($bl,$header,$rest)=split /[> ]/;
    print stderr "Done with recovery phase\n" if $item eq $max;
    if ($item<$max){
      if (defined $headers{$header}){
#        print stderr "Skipping $item $header\n";
         print stderr "-" if ($item%$dots eq 0);
        $print=0;
       }
       else{
         print stderr "+";
       }
     } 
     print if $print;
     $_=<stdin>;
     while(! /^>/ && ! eof(stdin)){
       print if $print;
       $_= <stdin>;
     }
     $item++;
     $new++ if $print;
     $print=1;
}
